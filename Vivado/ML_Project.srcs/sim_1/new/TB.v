`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 28.03.2024 12:34:03
// Design Name: 
// Module Name: TB
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module TB();
reg clk = 0;
reg rst;
reg start = 0;
reg [0:255] image;
wire [0:3] prediction;

neural_network n1(.clk(clk), .rst(rst), .start(start), .image(image), .prediction(prediction));

initial
begin
    #2;
    rst <= 1;
    #2;
    rst <= 0;
//    image <= 256'b0000001111111100000001111110110000001111110001100001111100001111000111101111111000011101111101100011111111000110001111110000110001111110000011000111100000001100011100000011100011100000001100001111000011110000111100011100000010111111100000000001111000000000;
//    image <= 256'b0000000000001111000000000000111100000000000011110000000000001111000000000000111000000000000011100000000000011100000000000011100000000000011110000000000011111000000000011111000000000111111100000000111101110000001111100111000011111000001110001110000000000000;
    image <= 256'b0000000111111100000000000000111000000000000001110000000000000011000000000000001100000000000000110000000000001111000000000000111000000000111111000000001111100000001111111000000011110000000000001110000000000000111000000000000001111111111111000000011111100000;
    #2;
    start <= 1;
    #2;
    start <= 0;
end

always@(clk)
begin
    #1 clk <= ~clk;
end

endmodule
